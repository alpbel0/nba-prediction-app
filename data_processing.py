

# -*- coding: utf-8 -*-
"""data_processing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fpY5Ak7hJn-51P2_R3wSjMZQT3-2TqNo
"""

import pandas as pd

def summarize_dataframe(df, data_name=None):
    print(f"--- {data_name} ---")
    print("\n--- İlk 10 Satır (df.head(3)) ---")
    # .to_markdown() okunurluğu artırır, eğer hata verirse bu kısmı silebilirsin
    try:
        print(df.head(10).to_markdown(index=False))
    except ImportError:
        print(df.head(10))

    print("\n--- Veri Seti Bilgileri (df.info()) ---")
    df.info()

    print("\n--- Betimsel İstatistikler (df.describe()) ---")
    print(df.describe())

    print("\n--- DataSet Boyutu (df.isnull().sum()) ---")
    print(df.shape)

    print("\n--- Eksik Veri Sayıları (df.isnull().sum()) ---")
    print(df.isnull().sum())

    print("\n--- Sütun İsimleri ---")
    print(list(df.columns))
    print("\n" + "="*50 + "\n")

def analyze_missing_values(data, data_names=None, default_name="DataFrame"):
    """
    data: pd.DataFrame veya dict veya list of DataFrame
    data_names: Eğer data bir listeyse ve sizin özel isimleriniz varsa,
                bunları bu liste olarak verin. Uzunlukları eşit olmalı.
    default_name: Tek bir DataFrame gönderdiyseniz, başlık olarak kullanılır.
    """

    # 1) Tek bir DataFrame
    if isinstance(data, pd.DataFrame):
        dfs_to_analyze = {default_name: data}

    # 2) İsimlendirilmiş dict
    elif isinstance(data, dict):
        dfs_to_analyze = data

    # 3) Liste + opsiyonel data_names
    elif isinstance(data, list):
        # Eğer data_names verilmişse, onları kullan; yoksa DataFrame_1 gibi otomatik isimlendir
        if data_names:
            if len(data_names) != len(data):
                raise ValueError("data_names ile data listesi aynı uzunlukta olmalı.")
            dfs_to_analyze = dict(zip(data_names, data))
        else:
            dfs_to_analyze = {
                f"{default_name}_{i+1}": df
                for i, df in enumerate(data)
            }
    else:
        raise ValueError(
            "Giriş 'data' parametresi bir Pandas DataFrame, dict veya list olmalıdır."
        )

    # Analiz kısmı
    for name, df in dfs_to_analyze.items():
        if not isinstance(df, pd.DataFrame):
            print(f"Uyarı: '{name}' bir DataFrame değil, atlanıyor.")
            continue

        print(f"--- '{name}' için eksik veri analizi ---")
        n = len(df)
        if n == 0:
            print("DataFrame boş, analiz atlanıyor.\n")
            continue

        miss = df.isnull().sum()
        miss = miss[miss > 0]
        if miss.empty:
            print("Bu DataFrame'de hiç eksik veri yok. Harika!\n")
        else:
            pct = (miss / n) * 100
            info = pd.DataFrame({
                "Eksik Değer Sayısı": miss,
                "Eksik Yüzdesi (%)": pct
            }).sort_values("Eksik Yüzdesi (%)", ascending=False)
            print(info, "\n")



